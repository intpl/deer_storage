version: '3'

services:
  nginx-proxy:
    build:
      dockerfile: ./Dockerfile.nginx-proxy
      context: ./docker-data
    env_file:
      - .env
    environment:
      PHOENIX: phoenix
    ports:
      - "${APP_HTTP_PORT}:80"
      - "${APP_HTTPS_PORT}:443"
    volumes:
      - config_and_certificates:/config_and_certificates
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    depends_on:
      - phoenix
    restart: always # needs to restart until certbot has generated certificates
  certbot:
    build:
      dockerfile: ./Dockerfile.certbot
      context: ./docker-data
    env_file:
      - .env
    volumes:
      - certbot_www:/var/www/certbot
      - config_and_certificates:/config_and_certificates
    restart: always
    depends_on:
      - nginx-proxy
  phoenix:
    image: deer_storage-prod
    build:
      context: ./
      dockerfile: ./docker-data/Dockerfile.phoenix
    env_file:
      - .env
    environment:
      SECRET_KEY_BASE: "${SECRET_KEY_BASE}"
      APP_HOST: "${APP_HOST}"
    depends_on:
      - db
    volumes:
      - uploaded_files:/opt/app/uploaded_files
    restart: always
  db:
    image: postgres:11-alpine
    environment:
      POSTGRES_USER: "${PGUSER}"
      POSTGRES_PASSWORD: "${PGPASSWORD}"
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
volumes:
  pgdata:
  uploaded_files:
  config_and_certificates:
  certbot_www:
  certbot_conf:
