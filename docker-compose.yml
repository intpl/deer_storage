# Version of docker-compose
version: '3'

# Containers we are going to run
services:
  nginx-proxy:
    image: nginx:1.19-alpine
    environment:
      APP_HOST: ${APP_HOST}
      NGINX_ENVSUBST_TEMPLATE_SUFFIX: ".template"
      PHOENIX: http://phoenix
    ports:
      - "${APP_HTTP_PORT}:80"
      - "${APP_HTTPS_PORT}:443"
    volumes:
      - ./docker-data/nginx/templates:/etc/nginx/templates
      - ./docker-data/certbot/conf:/etc/letsencrypt
      - ./docker-data/certbot/www:/var/www/certbot
    depends_on:
      - phoenix
      - certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./docker-data/certbot/conf:/etc/letsencrypt
      - ./docker-data/certbot/www:/var/www/certbot
  phoenix:
    image: pjeski-prod
    build:
      dockerfile: prod.Dockerfile
      context: .
    environment:
      SECRET_KEY_BASE: "${SECRET_KEY_BASE}"
      APP_HOST: "${APP_HOST}"
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: pjeski
      PGPORT: 5432
      PGHOST: db
    depends_on:
      - db
    volumes:
      # TODO: mnesia
      - uploaded_files:/app/uploaded_files
  db:
    image: postgres:11-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
volumes:
  pgdata:
  uploaded_files:
