FROM bitwalker/alpine-elixir:1.11.0 AS build

# Install NPM
RUN \
    mkdir -p /opt/app && \
    chmod -R 777 /opt/app && \
    apk update && \
    apk --no-cache --update add \
      make \
      g++ \
      wget \
      curl \
      inotify-tools \
      nodejs \
      nodejs-npm && \
    npm install npm -g --no-progress && \
    update-ca-certificates --fresh && \
    rm -rf /var/cache/apk/*

# Add local node module binaries to PATH
ENV PATH=./node_modules/.bin:$PATH

# Ensure latest versions of Hex/Rebar are installed on build
ONBUILD RUN mix do local.hex --force, local.rebar --force

WORKDIR /opt/app

RUN mix local.hex --force && \
    mix local.rebar --force

ENV MIX_ENV=prod

COPY mix.exs mix.lock ./
COPY config config
RUN mix do deps.get, deps.compile

COPY assets/package.json assets/package-lock.json ./assets/
RUN npm --prefix ./assets ci --progress=false --no-audit --loglevel=error

COPY priv priv
COPY assets assets
RUN npm run --prefix ./assets deploy
RUN mix phx.digest

COPY lib lib

# uncomment COPY if rel/ exists
# COPY rel rel

RUN mix do compile, release

FROM bitwalker/alpine-erlang:23 AS app

RUN apk --no-cache --no-progress add -q postgresql-client=11.11-r0 --repository=http://dl-cdn.alpinelinux.org/alpine/v3.10/main
RUN apk --no-cache --no-progress add -q coreutils file

WORKDIR /opt/app

COPY --from=build /opt/app/_build/prod/rel/pjeski ./
RUN ["chmod", "+x", "/opt/app/bin/pjeski"]
RUN ["chmod", "+x", "/opt/app/releases/0.1.0/elixir"]

COPY ./docker-data/phoenix-entrypoint.sh /opt/app

ENTRYPOINT ["/bin/bash", "-c"]
CMD ["/opt/app/phoenix-entrypoint.sh"]
